@page "/"
@using Blazorise.Charts

<div class="container">
    <h3 class="fw-bold mb-4">Production Dashboard</h3>

    <!-- KPI Cards -->
    <div class="row mb-4">
        @foreach (var kpi in KPIs)
        {
            <div class="col-md-3 mb-3">
                <div class="card text-center shadow-sm">
                    <div class="card-body">
                        <small class="text-muted">@kpi.Title</small>
                        <h4 class="fw-bold mt-2">@kpi.Value</h4>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Production by Product per Shift -->
    <div class="mb-4">
        <h6 class="fw-semibold">Production by Product per Shift</h6>
        <div class="border rounded p-4 text-muted text-center" style="min-height: 150px;">
            <!-- Placeholder for chart -->
            <div class="mb-4">
                <h6 class="fw-semibold">Production by Product per Shift</h6>
                <div class="border rounded p-4" style="min-height: 300px;">
                    <div class="row text-center fw-semibold mb-2">
                        <div class="col">Product</div>
                        <div class="col">Shift A</div>
                        <div class="col">Shift B</div>
                        <div class="col">Shift C</div>
                    </div>
                    @foreach (var product in productShiftData)
                    {
                        <div class="row align-items-center mb-2">
                            <div class="col">@product.Key</div>
                            @for (int i = 0; i < product.Value.Count; i++)
                            {
                                var value = product.Value[i];
                                var width = value / 25; // scale down for demo
                                <div class="col">
                                    <div class="bg-primary text-white p-1 text-center" style="width:@width%; min-width: 30px;">
                                        @value
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Line Speed Table -->
    <div class="mb-4">
        <h6 class="fw-semibold">Line Speed by Shift</h6>
        <div class="table-responsive">
            <table class="table table-bordered text-center">
                <thead class="table-light">
                    <tr>
                        <th> </th>
                        <th>Shift A</th>
                        <th>Shift B</th>
                        <th>Shift C</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var line in LineSpeedByShift)
                    {
                        <tr>
                            <th>@line.Line</th>
                            <td>@line.ShiftA</td>
                            <td>@line.ShiftB</td>
                            <td>@line.ShiftC</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private List<(string Title, string Value)> KPIs = new()
    {
        ("Total Production / Day", "000"),
        ("Total Energy / Day", "000"),
        ("Total Production / Month", "000"),
        ("Total Energy / Month", "000")
    };

    private List<LineSpeedRow> LineSpeedByShift = new()
    {
        new LineSpeedRow("Line 1", "000", "000", "000"),
        new LineSpeedRow("Line 2", "000", "000", "000"),
        new LineSpeedRow("Line 3", "000", "000", "000"),
        new LineSpeedRow("Line 4", "000", "000", "000")
    };

    public class LineSpeedRow
    {
        public string Line { get; set; }
        public string ShiftA { get; set; }
        public string ShiftB { get; set; }
        public string ShiftC { get; set; }

        public LineSpeedRow(string line, string a, string b, string c)
        {
            Line = line;
            ShiftA = a;
            ShiftB = b;
            ShiftC = c;
        }
    }

    private BarChart<int> productionChart;

    private readonly string[] shifts = { "Shift A", "Shift B", "Shift C" };

    // Sample production data for 5 products across 3 shifts
    private readonly Dictionary<string, List<int>> productShiftData = new()
    {
        { "Product 1", new List<int> { 1200, 1100, 1000 } },
        { "Product 2", new List<int> { 1500, 1300, 1200 } },
        { "Product 3", new List<int> { 1000, 1250, 1050 } },
        { "Product 4", new List<int> { 2200, 2000, 2100 } },
        { "Product 5", new List<int> { 1700, 1600, 1550 } },
    };

    private Dictionary<string, (int Energy, int Production)> energyProductionData = new()
    {
        { "Shift A", (5000, 1500) },
        { "Shift B", (4600, 1400) },
        { "Shift C", (5200, 1550) },
    };

    private LineChart<int> lineChart;
}
